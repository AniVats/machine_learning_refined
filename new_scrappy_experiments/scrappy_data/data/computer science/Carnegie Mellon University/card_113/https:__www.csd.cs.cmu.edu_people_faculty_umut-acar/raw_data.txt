{"email": ["umut@cs.cmu.edu", "csd-marcom-info@cmu.edu?subject=Website%20issue%20or%20question"], "image": ["https://www.csd.cs.cmu.edu/sites/default/files/styles/directory_photos/public/Acar-people-page.jpg?itok=zB8ZCpvX", "/sites/default/files/media-icons/default/email.png", "/sites/default/files/media-icons/default/facebook.png", "/sites/default/files/media-icons/default/twitter.png", "/sites/default/files/media-icons/default/linkedin.png"], "research_blurb": ["My main areas of interest are programming languages, parallel computing, and algorithms. In my research, I aim to raise the level of abstraction at which computer scientists reason about problems, and develop algorithms and software. To this end, I develop abstractions and design the supporting language constructs, algorithms, and software systems.\u00a0Programming languages aim to fill the large gap between the level at which we humans reason (as for example manifested by mathematics) and the tedious code of instructions required by the computer. They do so by offering us abstractions with which we can organize and express our thoughts and by translating our thoughts expressed as programs to code suitable for computers to execute. For reasons of efficiency, as computer scientists, we have thus far resorted to low level abstractions--abstractions closer to the level of computers than humans--for expressing computation. But today, as computer systems become architecturally more complex, it has become increasingly more difficult to design software that perform well with such low-level abstractions. The problem is exacerbated by increased demands on the capability and the quality of software, as it performs many critical tasks and handles sensitive information. I therefore develop higher-level abstractions, programming languages, and systems that enable creative thought and expression while also ensuring efficiency. My research in this area thus far focused on dynamic or incremental computation, where systems interact with dynamically changing data, and parallel computation, where multiple processors can be used to perform a task simultaneously."]}