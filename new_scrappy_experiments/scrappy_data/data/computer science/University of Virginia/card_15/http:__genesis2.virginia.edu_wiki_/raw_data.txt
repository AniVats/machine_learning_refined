{"email": ["xcghelp@cs.virginia.edu?subject=XCG%20ACCOUNT%20REQUEST%20SENT%20FROM%20GENESIS%20II%20WIKI"], "image": [], "research_blurb": ["\nGenesis II Wiki\n\n Standards-Based Grid Computing \n", ".  The Genesis II Project is intended to provide the grid user community with free, easy-to-use tools to leverage grid technology to fulfill their computation and data management needs.  The platform is designed to support a wide range of potential application domains from simple data sharing to multi-platform, multi-organizational high-throughput computing.  We currently provide a production level grid environment for biomedical research here at the .  The Genesis II platform is an interoperable (via adherence to community standards), freely available, and flexible platform for developing and evaluating new grid technologies and models.  Genesis II serves to vet and validate the standardization efforts within the OGF and OGSA standards communities.  Grid research is a dynamic field of study, and many challenges remain. Particular areas that we focus on are data access, security (confidentiality, data integrity, access control, policy negotiation), dependability (availability, SLA\u2019s, policy languages), and grid standards.\n is a computing and data sharing platform created and maintained jointly by researchers in the UVa Department of Computer Science and the UVa Alliance for Computational Science & Engineering (UVACSE).  The XCG manages a large collection of resources across a number of departments at UVa as well as a number of institutions outside of UVa.  You can use  program. Through GFFS, user applications running on campus and research group machines can directly access (create, read, update, delete) files and other resources at NSF-funded service provider (SP) sites and collaborator sites as if they were in their local operating system file system. Similarly, applications running at the service providers can directly access files on campus or research group resources as if they were located at the center.  Existing applications, whether they are statically linked binaries, dynamically linked binaries, or scripts (shell, PERL, Python), can access resources anywhere in the GFFS without modification (subject to access control). \n", " Powered by PmWiki "]}