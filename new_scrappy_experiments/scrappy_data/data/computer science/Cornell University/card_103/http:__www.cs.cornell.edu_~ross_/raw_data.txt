{"email": [], "image": ["https://www.cs.cornell.edu/people/images/RossStrongRejectThumb.jpg", "http://subtalarsuperhero.files.wordpress.com/2012/02/foot3.png", "http://www.clker.com/cliparts/r/q/M/X/h/0/shoe-print-th.png", "https://www.cs.cornell.edu/people/Tate-OOPSLA18.png", "https://www.cs.cornell.edu/people/Tate-POPL13.png", "https://www.cs.cornell.edu/people/capoeira.jpg", "https://www.cs.cornell.edu/people/Tate-OOPSLA17.png", "https://www.cs.cornell.edu/people/Tate-SPLASH16.jpg", "https://www.cs.cornell.edu/people/Tate-POPL09.png", "https://www.cs.cornell.edu/people/Tate-CurryOn16.png", "https://www.cs.cornell.edu/people/Tate-PLDI14.png", "https://www.cs.cornell.edu/people/Tate-PLDI15.png", "https://www.cs.cornell.edu/people/Tate-PLDI11.jpg", "https://www.cs.cornell.edu/people/Tate-POPL10.jpg", "https://www.cs.cornell.edu/people/Tate-PLDI10.jpg", "https://www.cs.cornell.edu/people/TATE-ECOOP17.png", "https://www.cs.cornell.edu/people/Tate-ICFP18.png"], "research_blurb": ["Assistant Professor in Computer Science at Cornell University\n\t\t\t\t\t\tDirector of The Single Open Intermediate Language Initiative\n\t\t\t\t\t\tComputer Science Ph.D. at University of California, San Diego [Thesis]\n\t\t\t\t\t\tMathematics & Computer Science B.S.s at Cal Poly, San Luis Obispo", "I interned under <a href=\"http://research.microsoft.com/~daan/\">Daan Leijen</a> at Microsoft Research in Redmond in Summer/Fall 2009. We designed a pure but effectful functional programming language, as well as a Hindley-Milner-like type inference algorithm with effects and higher-order polymorphism (based on Daan's <a href=\"http://research.microsoft.com/~daan/pubs.aspx\">HMF</a>). In doing so, I improved compiler technology for inferring higher-ranked polymorphism. I also managed to generalize monads in order to formalize effect systems with multiple interacting effects.\n<img alt=\"Ross Tate Capoeira\" class=\"photobottom\" src=\"capoeira.jpg\"/>\nI interned under <a href=\"http://research.microsoft.com/~juanchen/\">Juan Chen</a> and <a href=\"http://research.microsoft.com/~chrishaw/\">Chris Hawblitzel</a> at Microsoft Research in Redmond in Summer/Fall 2008. I designed a type-inference algorithm for an x86 assembly type system for object-oriented programs, as can be seen at <a href=\"publications/italx/\">PLDI 2010</a>. This typed assembly language, which we called iTalX, is now a key part of Microsoft Research's computer-verified memory-safe operating system, <a href=\"http://research.microsoft.com/apps/pubs/?id=122884\">Verve</a>. In order to design this inferable type system, I first designed a framework for existential types based on category theory, which has proven to be intuitive, powerful, and flexible. This framework was then reused for my work on Java's wildcards in <a href=\"publications/tamewild/\">PLDI 2011</a>."]}