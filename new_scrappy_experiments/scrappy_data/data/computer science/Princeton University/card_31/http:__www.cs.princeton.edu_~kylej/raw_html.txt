"<html><head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/master.css\">\n  <link rel=\"shortcut icon\" href=\"images/favicon.ico\">\n\t<meta http-equiv=\"Content-type\" content=\"text/html; charset=UTF-8\">\n\t<meta http-equiv=\"Content-Language\" content=\"en-us\">\n\t<meta http-equiv=\"imagetoolbar\" content=\"no\">\n\t<meta name=\"MSSmartTagsPreventParsing\" content=\"true\">\n\t<meta name=\"description\" content=\"Kyle Jamieson's Home Page at Princeton University Department of Computer Science\">\n\t<meta name=\"keywords\" content=\"Kyle Jamieson Princeton University Computer Science MIT\">\n\t<meta name=\"author\" content=\"Kyle Jamieson\">\n\t<title>Kyle Jamieson -- Princeton University Department of Computer Science</title>\n</head>\n\n<body class=\"about\">\n\n  <div id=\"head\"></div>\n\n  <div id=\"page\">\n    \n    <script type=\"text/javascript\" id=\"www-widgetapi-script\" src=\"https://s.ytimg.com/yts/jsbin/www-widgetapi-vflZzD3G3/www-widgetapi.js\" async=\"\"></script><script src=\"https://www.youtube.com/iframe_api\"></script><script src=\"header.js\"></script>    <div id=\"header\">      <img id=\"kyle\" src=\"images/kj-cos.jpeg\"><br>      <div id=\"title\">        Kyle Jamieson<br><br>        <span class=\"address\">Department of Computer        Science</span><br>        <span class=\"address\">35 Olden Street, Room 306</span><br>        <span class=\"address\">Princeton, NJ  08540</span><br>        <span class=\"address\">kylej at cs.princeton.edu,        <a href=\"https://keybase.io/jamieson\">PGP key</a></span><br>       </div>      <div id=\"bmenu-container\">        <ul class=\"bmenu\">          <li id=\"about\"><a href=\"index.html\">About</a></li><!--          --><li id=\"publications\"><a href=\"publications.html\">Publications</a></li><!--          --><li id=\"teaching\"><a href=\"teaching.html\">Teaching</a></li><!--          --><li id=\"talks\"><a href=\"talks.html\">Talks</a></li><!--          --><li id=\"service\"><a href=\"service.html\">Service</a></li>        </ul>      </div> <!-- bmenu-container -->    </div> <!-- header -->\n\n    <div id=\"body\">\n      <p>I am an Associate Professor\n      in the <a href=\"https://www.cs.princeton.edu\">Department of\n      Computer Science</a>\n      at <a href=\"https://www.princeton.edu\">Princeton\n      University</a> where I lead the <a href=\"https://paws.cs.princeton.edu\">PAWS Group</a>,\n      and adjunct Reader of Wireless Systems and Networks at\n      University College London. \n      </p>\n\n      <ul>\n        <li>Computer Science Undergraduate Independent Work <a href=\"iw\">project ideas</a> (campus IP address <i>and</i>\n        CS department user account required for access).</li>\n        <li>This Spring semester I'm teaching an \n        new undergraduate level class in <a href=\"https://www.cs.princeton.edu/courses/archive/spring19/cos463/index.html\">Wireless\n        Networks</a>.\n      </li></ul>\n\n      <h1>Research</h1>\n\n      <p>My research interests are in all aspects of wireless\n      networked systems, from the basic architecture of the wireless physical\n      layer to high-level applications.  The two main strands\n      of work I have pursued involve bringing phased array signal\n      processing indoors and improving the capacity of \n      wireless networks in a world with many billions of wireless\n      devices, most of which transmit in wireless spectrum that is\n      unplanned by any central authority.</p>\n      \n      <p>For further information, see the <a href=\"https://paws.cs.princeton.edu\">Princeton Advanced Wireless\n      Systems</a> (PAWS) group website.</p>\n\n      <h1>Recruiting</h1> \n      \n      <p>I am seeking graduate students and postdoctoral research\n      associates with an interest in working on challenging open\n      problems in wireless networks and \n      systems to join the PAWS team.  If you are\n      interested, you must <a href=\"https://www.cs.princeton.edu/grad\">apply</a> and be\n      admitted to the graduate program at Princeton University.\n      Because of the volume of mail I receive I regret that I'm not\n      always able to reply to personal inquiries.</p>\n\n    </div> <!-- body -->\n\n  </div> <!-- page -->\n\n  <div id=\"foot\"></div>\n\n  <script>\n      // 2. This code loads the IFrame Player API code asynchronously.\n      var tag = document.createElement('script');\n\n      tag.src = \"https://www.youtube.com/iframe_api\";\n      var firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n      // 3. This function creates an <iframe> (and YouTube player)\n      //    after the API code downloads.\n      var player;\n      function onYouTubeIframeAPIReady() {\n        player = new YT.Player('ytplayer-arraytrack', {\n          height: '200',\n          width: '320',\n          videoId: 'pMl407bidxU',\n          playerVars: {\n            autoplay: '1',\n            enablejsapi: '1',\n            controls: '0',\n            start: '25',\n            end: '50',\n            modestbranding: '1',\n            loop: '1',\n            playlist: 'pMl407bidxU'\n          }, events: {\n            'onReady': onPlayerReady,\n            'onStateChange': onPlayerStateChange\n          }\n        });\n\n        player2 = new YT.Player('ytplayer-mobitagbot', {\n          height: '200',\n          width: '320',\n          videoId: 'Drf8pL9oikA',\n          playerVars: {\n            autoplay: '1',\n            enablejsapi: '1',\n            controls: '0',\n            start: '120',\n            end: '150',\n            modestbranding: '1',\n            loop: '1',\n            playlist: 'Drf8pL9oikA'\n          }, events: {\n            'onReady': onPlayerReady,\n            'onStateChange': onPlayerStateChange\n          }\n        });\n      }\n\n      // 4. The API will call this function when the video player is ready.\n      function onPlayerReady(event) {\n        player.mute();\n        player2.mute();\n      }\n\n      // 5. The API calls this function when the player's state changes.\n      var done = false;\n      function onPlayerStateChange(event) {\n        //if (event.data == YT.PlayerState.PLAYING && !done) {\n          //setTimeout(pauseVideo, 20000);\n          //done = true;\n        //}\n      }\n      function pauseVideo() {\n        player.pauseVideo();\n        player.unMute();\n      }\n\n  </script>\n\n\n</body></html>"