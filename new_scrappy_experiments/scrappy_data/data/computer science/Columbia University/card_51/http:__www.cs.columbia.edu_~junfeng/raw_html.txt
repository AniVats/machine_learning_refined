"<html><head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <meta name=\"Author\" content=\"Junfeng Yang\">\n    <meta name=\"Description\" content=\"Computer Science Professor, Columbia University.  My research centers on making reliable and secure systems.\">\n    <meta name=\"Keywords\" content=\"Junfeng, Junfeng Yang, peregrine, explode, modist, tern, loom, demeter,  deterministic multithreading, operating systems, programming language, distributed systems\">\n    <title>Junfeng Yang, Systems, Computer Science Professor,\n       Columbia University</title> \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"http://www.cs.columbia.edu/~junfeng/style.css\">\n<script type=\"text/javascript\" async=\"\" src=\"http://www.google-analytics.com/ga.js\"></script><script type=\"text/javascript\">\n\n  var _gaq = _gaq || [];\n  _gaq.push(['_setAccount', 'UA-906677-1']);\n  _gaq.push(['_trackPageview']);\n\n  (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n  })();\n\n</script></head>\n\n\n\n<body>\n\n<!----\n  <table>\n    <tr>\n      <td id=\"logo\">\n        <a href=http://www.cs.columbia.edu>\n          <img src=\"http://www.cs.columbia.edu/images/cscu.jpg\" \n               alt=\"Columbia CS\"\n               border=0px />\n        </a>\n      </td>\n      \n      <td>\n        <div id=\"title\">\n          <h1> Reliable Computer Systems Laboratory </h1>\n        </div>\n      </td>\n    </tr>\n  </table>\n--->\n  <div id=\"content\">\n<table width=\"95%\" border=\"0\" align=\"center\" cellpadding=\"10\" style=\"margin-left:4em;\">\n  <tbody><tr valign=\"bottom\">\n    <td align=\"left\" width=\"35%\"> \n    \t<h2> Junfeng Yang </h2> \n    \tAssociate Professor <br>\n        Co-director of <a href=\"http://systems.cs.columbia.edu\">Software Systems Lab</a> <br>\n        <a href=\"http://www.cs.columbia.edu/\"> Department of Computer Science</a><br>\n        <a href=\"http://www.columbia.edu\"> Columbia University</a><br>\n    \t<br>\n\t500 West 120 Street, 519 CSB<br>\n\tMail Code 0401 <br>\n\tNew York, NY 10027 <br>\n    \t<br>\n\t<img src=\"email.jpg\" alt=\"Email of Junfeng Yang\"> <br>\n\t<br>\n        Lab: 487 CSB <br>\n\tPhone: (212) 939-7012 <br>\n\tFax: (212) 666-0140 <br>\n\t<br>\n        [ <a href=\"http://systems.cs.columbia.edu/lab/news/\">News</a>\n        | <a href=\"#awards\">Awards</a>\n        | <a href=\"#publications\">Publications</a>\n        | <a href=\"#software\">Software</a>\n        | <a href=\"http://systems.cs.columbia.edu/projects/\">Projects</a>] <br>\n        [ <a href=\"#people\">People</a> \n        | <a href=\"#press\">Press</a>\n        | <a href=\"#teaching\">Teaching</a>\n        | <a href=\"#support\">Support</a> ]\n        <br>\n        <br>\n    </td>\n    <td align=\"left\"><img src=\"yang-small.jpg\" alt=\"Picture of Junfeng Yang\" height=\"400\"></td>\n  </tr>\n</tbody></table>\n\n<p> My research centers on making reliable and secure systems.  Some of my\n  current research thrusts are (1) security and robustness of machine\n  learning, (2) tools to better protect, verify, analyze, test, and debug\n  software, and (3) programming and runtime systems for cloud\n  applications.  After getting a BS in Computer Science from\n  <a href=\"http://www.tsinghua.edu.cn/publish/then/index.html\">Tsinghua\n  University</a>, I earned my PhD in Computer Science at\n  <a href=\"http://www.stanford.edu/\">Stanford</a>, where I created\n  <a href=\"papers/yang-explode-osdi.pdf\">eXplode</a>, a general, lightweight\n  system for effectively finding storage system errors.  This work has led\n  to <a href=\"http://www.usenix.org/events/osdi04/tech/yang.html\">an OSDI\n  best paper award</a>,\n  <a href=\"http://www.google.com/#q=junfeng+site:lkml.org\">numerous bug\n  fixes</a> to real systems such as the Linux kernel, and\n  <a href=\"http://lwn.net/Articles/210590\">a featured article</a> in Linux\n  Weekly news.  In 2008, I worked at Microsoft Research Silicon Valley,\n  extending eXplode to check production distributed systems.\n  <a href=\"papers/modist-nsdi09.pdf\">MoDist</a>, the resultant system, is\n  being transferred to Microsoft product groups.  At Columbia University,\n  my recent work on reliable multithreading was featured in sites such as\n  <a href=\"http://technews.acm.org/archives.cfm?fo=2011-11-nov/nov-04-2011.html#550214\">ACM\n  Tech News</a>.  I won the Sloan Research Fellowship and the AFOSR YIP\n  award, both in 2012; and the NSF CAREER award in 2011.\n\n</p><p style=\"font-size: x-large;\"><b>I'm looking for a few graduate students,\n  postdocs, and undergraduate interns.  If you know how to build\n  systems/tools, we should talk.</b></p>\n\n<p style=\"font-size: x-large;\"><b>Columbia undergraduate and master\n  students</b>: the above applies to you, too.  Also, take a look at\n  some <a href=\"student-projects.html\">projects</a> available for academic\n  credits.</p>\n\n<p> I was on sabbatical in 2016 co-founding a Columbia spin-off called\n  <a href=\"https://nimbledroid.com\">NimbleDroid</a>.  NimbleDroid provides\n  automated, comprehensive app performance analysis to help teams build\n  performant apps.  Its mission is to leverage research breakthroughs to\n  automate mundane tasks in software engineering.  </p>\n\n<a name=\"awards\"></a>\n<h3> Select Awards</h3>\n<ul>\n  <li><a href=\"http://acsic.org/award.html\">Rock Star Award, Association of Chinese Scholars in Computing</a>, 2019</li>\n  <li><a href=\"https://www.sigops.org/sosp/sosp17/program.html\">SOSP best\n  paper</a>, 2017</li>\n  <li><a href=\"http://www.sloan.org/fellowships\">Sloan research fellowship</a>, 2012</li>\n  <li><a href=\"http://www.eurekalert.org/pub_releases/2012-01/afoo-aag011112.php\">Air\n  Force Office of Scientific Research Young Investigator Program Award\n  (AFOSR YIP)</a>, 2012</li>\n  <li><a href=\"http://www.nsf.gov/awardsearch/showAward.do?AwardNumber=1054906\">NSF CAREER</a>, 2011</li>\n  <li><a href=\"http://www.usenix.org/events/osdi04/tech/yang.html\">OSDI\n  best paper</a>, 2004</li>\n</ul>\n\n<a name=\"drafts\"></a>\n<h3>Paper drafts</h3>\n<p> (If you're interested in a paper draft but it isn't available online, please email me for a copy.)</p>\n<ul class=\"paper\">\n          <li>\n<span class=\"title\"><a href=\"http://www.cs.columbia.edu/~junfeng/papers/egalito-asplos20.pdf\">Egalito: Layout-Agnostic Binary Recompilation</a></span>\n&nbsp;[<a href=\"http://www.cs.columbia.edu/~junfeng/papers/egalito-asplos20.bib\">bib</a>]<br>\n<span class=\"author\"><a href=\"http://www.cs.columbia.edu/~dwk/\">David Williams-King</a>, Hidenori Kobayashi, Kent Williams-King, Graham Patterson, Frank Spano, Yu Jian Wu, <a href=\"http://www.cs.columbia.edu/~junfeng\">Junfeng Yang</a>, <a href=\"https://cs.brown.edu/~vpk/\">Vasileios P. Kemerlis</a></span><br>\n<span class=\"conference\">25th International Conference on Architecture Support for Programming Languages and Operating Systems (ASPLOS '20)</span>, \n2020<br>\n\n          </li>\n          <li>\n<span class=\"title\"><a href=\"http://www.cs.columbia.edu/~junfeng/papers/morpheus-asplos20.pdf\">Effective Concurrency Testing for Distributed Systems</a></span>\n&nbsp;[<a href=\"http://www.cs.columbia.edu/~junfeng/papers/morpheus-asplos20.bib\">bib</a>]<br>\n<span class=\"author\"><a href=\"http://xinhaoyuan.net\">Xinhao Yuan</a>, <a href=\"http://www.cs.columbia.edu/~junfeng\">Junfeng Yang</a></span><br>\n<span class=\"conference\">25th International Conference on Architecture Support for Programming Languages and Operating Systems (ASPLOS '20)</span>, \n2020<br>\n\n          </li>\n\t<li> <span class=\"title\"><a href=\"https://arxiv.org/abs/1712.01785\">Towards Practical Verification of Machine Learning: The Case of Computer Vision Systems\n</a></span><br> <span class=\"author\">\n            <a href=\"https://sites.google.com/site/kexinpeisite/\">Kexin Pei</a>, <a href=\"http://yinzhicao.org\">Yinzhi Cao</a>, <a href=\"http://www.cs.columbia.edu/~junfeng\">Junfeng Yang</a>, <a href=\"http://www.cs.columbia.edu/~suman\">Suman Jana</a>\n</span><br></li>\n\n\t<li> <span class=\"title\"><a href=\"https://arxiv.org/abs/1910.02354\">Unrestricted Adversarial Attacks for Semantic Segmentation</a></span><br> <span class=\"author\">\n            Guangyu Shen, Chengzhi Mao, <a href=\"http://www.cs.columbia.edu/~junfeng\">Junfeng Yang</a>, Baishakhi Ray\n</span><br></li>\n</ul>\n\n<a name=\"publications\"></a>\n<h3> Select Publications (<a href=\"publications.html\">Complete list...</a>) </h3>\n\n    <ul class=\"paper\">\n          <li>\n<span class=\"title\"><a href=\"http://www.cs.columbia.edu/~junfeng/papers/metric-neurips19.pdf\">Metric Learning for Adversarial Robustness</a></span>\n&nbsp;[<a href=\"http://www.cs.columbia.edu/~junfeng/papers/metric-neurips19.bib\">bib</a>]<br>\n<span class=\"author\">Chengzhi Mao, Ziyuan Zhong, <a href=\"http://www.cs.columbia.edu/~junfeng\">Junfeng Yang</a>, Carl Vondrick, Baishakhi Ray</span><br>\n<span class=\"conference\">Proceedings of the 33rd Annual Conference on Neural Information Processing Systems (NeurIPS)</span>, \n2019<br>\n<div class=\"description\">Our experiments show that adversarial attacks such as PGD cause the deep representations of neural networks to shift closer to the 'false' class. Motivated by this observation, we propose to regularize the representation space under attack with metric learning to produce more robust classifiers. Key is to carefully select the samples for metric learning. Code is <a href=\"https://github.com/columbia/Metric_Learning_Adversarial_Robustness\">here</a>.</div>\n\n          </li>\n          <li>\n<span class=\"title\"><a href=\"http://www.cs.columbia.edu/~junfeng/papers/deepxplore-sosp17.pdf\">DeepXplore: Automated Whitebox Testing of Deep Learning Systems</a></span>\n&nbsp;[<a href=\"http://www.cs.columbia.edu/~junfeng/papers/deepxplore-sosp17.bib\">bib</a>]&nbsp;&nbsp;(Best paper award)<br>\n<span class=\"author\"><a href=\"https://sites.google.com/site/kexinpeisite/\">Kexin Pei</a>, <a href=\"http://yinzhicao.org\">Yinzhi Cao</a>, <a href=\"http://www.cs.columbia.edu/~junfeng\">Junfeng Yang</a>, <a href=\"http://www.cs.columbia.edu/~suman\">Suman Jana</a></span><br>\n<span class=\"conference\">Proceedings of the 26th ACM Symposium on Operating Systems Principles (SOSP '17)</span>, \nOctober, 2017<br>\n<div class=\"description\">We increasingly rely on deep learning and deep neural networks (DNNs) in safety- and security-critical applications such as self-driving, medical diagnosis, face-based identification, and malware detection, but it remains an open challenge to thoroughly test DNNs for robustness and security. We propose Neuron Coverage, the first testing coverage metric to empirically understand how much decision logic a testing input set has exercised in a DNN. We design and build DeepXplore, the first systematic testing framework for DNNs. Given a test input, DeepXplore applies physically realizable transformations (e.g., darkening an image) to the inputs (as opposed to noise in prior adversarial ML work) to generate new inputs to maximize neuron coverage. It found thousands of flaws in state-of-art self-driving and malware detection DNNs and improved their neuron coverage by over 50%. (Also appeared in MLSec '17.)</div>\n\n          </li>\n          <li>\n<span class=\"title\"><a href=\"http://www.cs.columbia.edu/~junfeng/papers/shuffler-osdi16.pdf\">Shuffler: Fast and Deployable Continuous Code Re-Randomization</a></span>\n&nbsp;[<a href=\"http://www.cs.columbia.edu/~junfeng/papers/shuffler-osdi16.bib\">bib</a>]<br>\n<span class=\"author\"><a href=\"http://www.cs.columbia.edu/~dwk/\">David Williams-King</a>, Graham Gobieski, Kent Williams-King, James P Blake, <a href=\"http://xinhaoyuan.net\">Xinhao Yuan</a>, Patrick Colp, Vasileios P Kemerlis, <a href=\"http://www.cs.columbia.edu/~junfeng\">Junfeng Yang</a>, William Aiello</span><br>\n<span class=\"conference\">Proceedings of the Twelfth Symposium on Operating Systems Design and Implementation (OSDI '16)</span>, \n2016<br>\n<div class=\"description\">Describes Shuffler, a system that continuously randomizes an application's binary code at runtime, defeating code-reuse attacks. Shuffler is fast: it shuffles all code within tens of milliseconds, whereas cutting-edge ROP attacks need 10--100x more time to discover gadgets. Shuffler is egalitarian: leveraging the insight that randomization doesn't require a higher privilege authority, Shuffler shuffles itself, reducing trusted computing base and making the approach applicable to kernels and hypervisors. Shuffler is deployable: its augmented binary analysis requires no modifications to OS, compilers, and linkers.</div>\n\n          </li>\n          <li>\n<span class=\"title\"><a href=\"http://www.cs.columbia.edu/~junfeng/papers/smt-cacm.pdf\">Determinism Is Not Enough: Making Parallel Programs Reliable with Stable Multithreading</a></span>\n&nbsp;[<a href=\"http://www.cs.columbia.edu/~junfeng/papers/smt-cacm.bib\">bib</a>]<br>\n<span class=\"author\"><a href=\"http://www.cs.columbia.edu/~junfeng\">Junfeng Yang</a>, <a href=\"http://www.cs.columbia.edu/~heming/\">Heming Cui</a>, <a href=\"http://www.cs.columbia.edu/~jingyue/\">Jingyue Wu</a>, <a href=\"http://www.ytang.net/\">Yang Tang</a>, <a href=\"http://www.cs.columbia.edu/~ganghu\">Gang Hu</a></span><br>\n<span class=\"conference\">Communications of the ACM (2014)</span><br>\n<div class=\"description\">This paper is geared toward a general audience. If you have time to read just one paper on our concurrency work, this is the paper to read. It describes our vision of stable multithreading (StableMT), a radical approach to making multithreading reliable, and summarizes our last five years of work on designing, building, and applying stable multithreading systems. The final version of this paper will appear in CACM.</div>\n\n          </li>\n          <li>\n<span class=\"title\"><a href=\"http://www.cs.columbia.edu/~junfeng/papers/yang-explode-osdi.pdf\">EXPLODE: a Lightweight, General System for Finding Serious Storage System Errors</a></span>\n&nbsp;[<a href=\"http://www.cs.columbia.edu/~junfeng/papers/yang-explode-osdi.talk.pdf\">talk</a> | <a href=\"http://www.cs.columbia.edu/~junfeng/papers/yang-explode-osdi.bib\">bib</a>]<br>\n<span class=\"author\"><a href=\"http://www.cs.columbia.edu/~junfeng\">Junfeng Yang</a>, Can Sar, <a href=\"http://www.cs.stanford.edu/~engler\">Dawson Engler</a></span><br>\n<span class=\"conference\">Proceedings of the Seventh Symposium on Operating Systems Design and Implementation (OSDI '06)</span>, \nNovember, 2006<br>\n<div class=\"description\">Describes our in-situ model checking approach, which made it easy to thoroughly check real systems. We applied eXplode to 17 storage systems and found serious data-loss errors in every system checked. This paper is my favorite in describing our model checking approach, which forms the basis of my PhD thesis work.</div>\n\n          </li>\n    </ul>\n  \n<div></div>\n\n<a name=\"software\"></a>\n<h3> Software </h3>\n\n<ul class=\"project\">\n<li style=\"width: 90%\">\n<a href=\"https://github.com/columbia/crane\">Crane</a>, our transparent state machine replication system.\n</li><li style=\"width: 90%\">\n<a href=\"https://github.com/columbia/appdoctor\">AppDoctor</a>, our Android app checker.\n</li><li style=\"width: 90%\">\n<a href=\"https://github.com/columbia/smt-mc\">Parrot</a>, our latest stable\nand deterministic multithreading system.  It has two goals: (1) be practical\nand (2) be fast.  By default, it schedules\nsynchronizations in a round-robin manner, vastly reducing the set of\nschedules for reliability.  When needed, it allows developers to\nadd <it>performance hints</it> for speed.  Together with the code, we also\nreleased a benchmark suite with 100+ multithreaded programs, and Parrot's\ncomplete results on these programs.\n</li><li style=\"width: 90%\">\n<a href=\"https://github.com/columbia/neongoby\">NeonGoby</a>, a system for\neffectively detecting errors in alias analysis, one of the most crucial\nand widely used program analyses.  If you have an LLVM-based alias\nanalysis you want to check, give NeonGoby a try.\n</li><li style=\"width: 90%\">\n<a href=\"https://github.com/columbia/loom\">Loom</a>, a \"live-workaround\"\nsystem designed to quickly and safely bypass various types of concurrency\nerrors at runtime.  It contains a generic engine for live-updating multithreaded\nprograms without restarts, which you can leverage if you want to build a\nlive-update tool.\n</li><li style=\"width: 90%\">\n<a href=\"http://sourceforge.net/projects/explode\">eXplode</a>, a storage\nsystem checker. It uses an approach we call in-situ model checking to\nthoroughly check general systems software in a lightweight manner. </li>\n</ul>\n\n\n\n<a name=\"people\"></a>\n<h3>People</h3>\n\n<p>I'm fortunate to work or have worked with these brilliant people.</p>\n\n<ul>\n<li><a href=\"http://www.cs.columbia.edu/~dwk/\">David Williams-King</a>, PhD student</li>\n<li>Lingmei Weng, PhD student</li>\n<li><a href=\"https://sites.google.com/site/kexinpeisite/\">Kexin Pei</a>, PhD student</li>\n<li>Chengzhi Mao, PhD student</li>\n<li>Vikram Nitin, PhD student</li>\n<li>Tamer Eldeeb, PhD student</li>\n</ul>\n<ul>\n<li><a href=\"http://yinzhicao.org\">Yinzhi Cao</a>, Postdoc research scientist, 2014-2015, joined Lehigh University as a professor</li>\n<li><a href=\"http://www.cs.columbia.edu/~heming/\">Heming Cui</a>, PhD, 2015, joined the University of Hong Kong as a professor</li>\n<li><a href=\"http://www.cs.columbia.edu/~jingyue/\">Jingyue Wu</a>, PhD, 2014, went to Google</li>\n<li><a href=\"http://www.cs.columbia.edu/~ganghu\">Gang Hu</a>, PhD, 2018, went to Google</li>\n<li><a href=\"http://xinhaoyuan.net\">Xinhao Yuan</a>, PhD, 2019, went to Google</li>\n<li><a href=\"http://www.ytang.net/\">Yang Tang</a>, PhD, 2019, joined laioffer as their Director of Education and Curriculum Development</li>\n<li>Yan Cui, Postdoc research scientist, 2013-2015, went to Intel</li>\n<li><a href=\"http://www.cs.columbia.edu/~orenl/\">Oren Laadan</a>, Postdoc research scientist, 2010-2011, founded Cellrox</li>\n<li><a href=\"http://www.cs.columbia.edu/~ruigu/\">Rui Gu</a>, MS, 2017</li>\n<li>Linjie Zhu, MS, 2019</li>\n<li>Georgios Koloventzos, MS, 2016</li>\n<li>Karthik Jayaraman, MS, 2016</li>\n<li><a href=\"http://www.cs.columbia.edu/~weng-cl/\">Chuliang Weng</a>, Visiting research scientist, 2012</li>\n<li><a href=\"http://www.columbia.edu/~jmg2016/\">John Gallagher</a>, MS, 2011, went to FourSquare</li>\n<li>Chia-che Tsai, MS, 2011, went to Stony Brook for PhD</li>\n<li>Neetha Maria Sebastian, MS, 2011, went to Google</li>\n<li><a href=\"https://mice.cs.columbia.edu/persons/showPerson.php?personID=16390&amp;\">Yunling Wang</a>, MS, 2010, went to Microsoft</li>\n<li>Ben Warfield, MS, 2010, went to Wireless Generation</li>\n<li>Nathan Murith, MS, 2010, went to Autodesk</li>\n<li>Maoliang Huang, MS, 2010, went to FlexTrade Systems</li>\n<li>Patrick Huang, MS, 2009, went to Sony</li>\n</ul>\n\n<p>I co-advise some students in the\n  <a href=\"http://systems.cs.columbia.edu/people\">SSL</a> lab.</p>\n\n<a name=\"press\"></a>\n<h3>Articles and Discussions about Research</h3>\n<p>\n  DeepXplore: <a href=\"https://www.scientificamerican.com/article/when-ai-steers-us-astray/\">Scientific American</a>, <a href=\"https://spectrum.ieee.org/tech-talk/robotics/artificial-intelligence/better-bug-hunts-in-selfdriving-car-ai-could-save-lives\">IEEE Spectrum</a>, <a href=\"https://cacm.acm.org/magazines/2019/11/240390-deepxplore/fulltext\">CACM Research Highlight</a> (<a href=\"https://www.youtube.com/watch?v=4qNK2zUvlvw\">Video</a><a>), </a><a href=\"https://www.newsweek.com/artificial-intelligence-scientists-racist-sexist-robots-ai-693440\">Newsweek</a>, <a href=\"https://www.techradar.com/uk/news/self-driving-cars\">TechRadar</a>, <a href=\"https://news.columbia.edu/news/researchers-unveil-tool-debug-black-box-deep-learning-algorithms\">Columbia News</a>, <a href=\"https://www.chainnews.com/articles/176012178866.htm\">China News</a>, <a href=\"http://www.sohu.com/a/200966070_99905135\">Sohu</a>, <a href=\"https://t.cj.sina.com.cn/articles/view/3996876140/ee3b7d6c022001l7x\">Sina</a>, <a href=\"https://youtu.be/pd3t0kzROI8?t=518\">CCTV's Hello, AI documentary</a> <br>\n  Shuffler: <a href=\"https://www.networkworld.com/article/3146563/security/solution-to-jit-rop-cyber-attacks-scramble-code-quickly.html\">Network World</a>,\n  <a href=\"https://technews.acm.org/archives.cfm?fo=2016-11-nov/nov-18-2016.html\">ACM Tech News</a>\n  <br>\n  Machine unlearning:\n  <a href=\"https://thestack.com/iot/2015/09/22/machine-unlearning-how-can-information-be-forgotten-in-the-age-of-viral-data-spread/\">The\n  Stack</a>,\n  <a href=\"http://www.eurekalert.org/pub_releases/2016-03/lu-nu031416.php\">EurekAlert</a>, \n  <a href=\"http://www.theatlantic.com/technology/archive/2016/03/computers-brains-cybernetics/474273/\">The Atlantic</a>,\n  <a href=\"http://www.kurzweilai.net/new-machine-unlearning-technique-deletes-unwanted-data\">KurzweilAI</a><a>,\n  </a><a href=\"http://technews.acm.org/archives.cfm?fo=2015-09-sep/sep-25-2015.html#817039\">ACM Tech News</a><br>\n  Peregrine: <a href=\"http://cacm.acm.org/news/140067-major-breakthrough-improves-software-reliability-and-security/fulltext\">CACM</a>,\n             <a href=\"http://technews.acm.org/archives.cfm?fo=2011-11-nov/nov-04-2011.html#550214\">ACM Tech News</a>,\n             <a href=\"http://www.theregister.co.uk/2011/11/03/peregrine_multithreading\">The Register</a>,\n\t     <a href=\"http://engineering.columbia.edu/major-breakthrough-improves-software-reliability-and-security\">Columbia Engineering</a>,\n\t     <a href=\"http://www.tgdaily.com/software-features/59420-new-system-could-improve-software-reliability-and-security\">TG Daily</a>,\n\t     <a href=\"http://www.physorg.com/news/2011-11-major-breakthrough-software-reliability.html\">Physorg.com</a>\n\t     <br>\n  MoDist: <a href=\"http://news.softpedia.com/news/Microsoft-039-s-MoDist-Tool-Designed-to-Hunt-for-Bugs-86561.shtml\">Softpedia</a><br>\n  eXplode: <a href=\"http://lwn.net/Articles/210590\">Linux Weekly News</a> <br>\n  Static analysis: <a href=\"http://www.google.com/#q=junfeng+site:lkml.org\">Linux Kernel Mailing List</a> <br>\n</p>\n\n<a name=\"teaching\" id=\"teaching\"></a>\n<h3>Teaching</h3>\n<p>\n  Spring 2020 -- <a href=\"20sp-w4156\">W4156: Advanced Software Engineering </a> <br>\n  Spring 2020 -- <a href=\"20sp-e6998\">E6998-010: Security and Robustness of ML systems </a> <br>\n  <br>\n  Spring 2019 -- <a href=\"19sp-e6121\">E6121: Reliable Software </a> <br>\n  Spring 2019 -- <a href=\"19sp-e6998\">E6998-001: Security and Robustness of ML systems </a> <br>\n  Spring 2018 -- <a href=\"18sp-e6121\">E6121: Reliable Software </a> <br>\n  Spring 2018 -- <a href=\"18sp-e6998\">E6998-009: Security and Robustness of ML systems </a> <br>\n  Spring 2017 -- <a href=\"17sp-e6121\">E6121: Reliable Software </a> <br>\n  Fall 2016 -- Teaching leave <br>\n  Spring 2016 -- Sabbatical leave <br>\n  Fall 2015 -- Sabbatical leave <br>\n  Spring 2015 -- Teaching leave <br>\n  Fall 2014 -- <a href=\"14fa-e6121\">E6121: Reliable Software </a> <br>\n  Spring 2014 -- Teaching leave <br>\n  Fall 2013 --  <a href=\"13fa-w4118\">W4118: Operating Systems I </a><br>\n  Spring 2013 -- Teaching leave <br>\n  Fall 2012 -- <a href=\"12fa-e6121\">E6121: Reliable Software </a> <br>\n  Spring 2012 -- <a href=\"12sp-w4118\">W4118: Operating Systems I </a><br> \n  Fall 2011 -- <a href=\"12fa-e6121\">E6121: Reliable Software </a> <br>\n  Spring 2011 -- <a href=\"11sp-w4118\">W4118: Operating Systems I </a><br> \n  Fall 2010 -- <a href=\"10fa-e6998\">E6998-1: Reliable Software </a> <br>\n  Spring 2010 -- <a href=\"10sp-w4118\">W4118: Operating Systems I </a><br> \n  Fall 2009 -- <a href=\"09fa-e6998\">E6998-1: Reliable Software </a> <br>\n  Spring 2009 -- <a href=\"09sp-w4118\">W4118: Operating Systems I </a><br> \n  Fall 2008 -- <a href=\"08fa-e6998\">E6998-2: How to\n  Make Reliable Software </a><br>\n</p>\n \n<a name=\"support\"></a>\n<h3>Support for Research and Teaching </h3>\n\n<!--- NO FUNDS --->\n\nWe are grateful to the sponsors of our research and teaching, including\nNSF, ONR, DARPA, AFOSR, AFRL, Sloan Foundation, Google, Facebook, and Amazon (an\nincomplete list).\n\n<br> <br>\n\n  </div> <!--- content --->\n\n\n\n</body></html>"