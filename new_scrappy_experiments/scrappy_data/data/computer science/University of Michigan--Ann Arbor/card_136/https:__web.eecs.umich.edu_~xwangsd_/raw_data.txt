{"email": [], "image": ["pics/photo.jpg"], "research_blurb": ["My areas of interest are <i>programming languages, formal methods, and software engineering.</i>\n<br/>\n                  My research to date focuses on developing <i>foundational</i> program synthesis techniques that are <i>applicable</i> to automating real-world programming tasks.\n                  <br/>\n                  I am also interested in developing and applying program analysis techniques in the context of software security and software engineering.\n                \n<div class=\"col-md-9\">\n<a name=\"research\"> </a>\n<br/>\n<h1>Research</h1>\n\n                  Due to the ubiquity of computing, programming has started to become an essential skill for an increasing number of people, including data scientists, financial analysts, and spreadsheet users. While it is well known that building any complex and reliable software is difficult, writing even simple scripts is challenging for novices with no formal programming background. <br/>\n                  The goal of my research is to democratize programming and make it possible for millions of people around the globe to automate otherwise tedious tasks. To achieve this goal, I develop <i>novel and foundational</i> program synthesis techniques that automatically generate programs from high-level specifications (such as input- output examples) for <i>a wide spectrum of application domains</i>. \n\n                  <br/>\n<br/>\n<b><font size=\"+1\">Automating real-world programming tasks</font></b>\n<br/>\n\n                  One central theme of my research is on the development of novel synthesis techniques for new and important application domains. In particular, I've applied program synthesis to automate various programmatic tasks in data science and spreadsheet programming.\n                  <ul>\n\n                      Filtering spreadsheet data using examples [<a href=\"pubs/oopsla16.pdf\">OOPSLA'16</a>]\n                    \n\n                      Data imputation using program sketching and programming-by-example [<a href=\"pubs/oopsla17.pdf\">OOPSLA'17</a>] \n                    \n\n                      Automated migration of hierarchical data to relational tables [<a href=\"pubs/vldb18.pdf\">VLDB'18</a>]\n                    \n</ul>\n<b><font size=\"+1\">Foundations of program synthesis</font></b>\n<br/>\n                  In order to scale program synthesis technology to increaslying more application domains, we need foundational algorithms that can be re-used across domains. \n                  This motivates another theme of my research on development of program synthesis frameworks: Instead of developing domain-specific synthesizers for new domains completely from scratch, such frameworks allow developing synthesizers for new domains with less human effort.\n                  <ul>\n\n                      A general program synthesis framework using tree automata [<a href=\"pubs/oopsla17.pdf\">OOPSLA'17</a>]\n                    \n\n                      An efficient program synthesis framework using abstraction refinement [<a href=\"pubs/popl18.pdf\">POPL'18</a>, <a href=\"pubs/cav18.pdf\">CAV'18</a>] <br/>\n                      This work pioneers the use of program abstractions in a general synthesis framework, which leads to orders of magnitude improvement in synthesis speed.\n                    \n\n                      A program synthesis framework for relational specifications (that relate multiple programs) [<a href=\"pubs/oopsla18.pdf\">OOPSLA'18</a>]\n                    \n</ul>\n\n<div class=\"col-md-9\">\n<a name=\"publications\"> </a>\n<br/>"]}