"<html><head>\n  \n  <meta content=\"text/html; charset=ISO-8859-1\" http-equiv=\"content-type\">\n  <title>Yang Wang</title>\n  <style>\n    ul li { margin-bottom: 10px; }\n</style>\n  \n</head>\n<body style=\"margin-top:0;margin-left:100px;margin-right:100px;text-align:justify;\">\n<table style=\"text-align: left; width: 100%;\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\">\n\n  <tbody>\n    <tr>\n      <td style=\"width: 233px;\"><img style=\"width: 320px; height: 240px;\" alt=\"Yang's photo\" src=\"head.JPG\"></td>\n      <td style=\"width: 652px;\"><big><big><span style=\"font-weight: bold;\">Yang Wang</span></big></big><small><br>\n      <br>\n      </small><big>Assistant Professor</big><br>\nOffice: DL689<br>\n      <a href=\"https://cse.osu.edu/\"><big>Department\nof Computer\nScience and Engineering</big></a><small><small><br>\n      </small></small><a href=\"http://www.osu.edu/\"><big>The\nOhio State University</big></a><br>\nEmail: wang dot 7564 at osu dot edu</td>\n      <td style=\"width: 721px;\"><big><big><big><small><br>\n      <br>\n      <br>\n      </small></big></big><br>\n      </big></td>\n    </tr>\n  </tbody>\n</table>\n\n<br>\n<font size=\"+1\">\n<hr style=\"width: 100%; height: 2px;\">\nMy research interests are in distributed systems, in particular fault\ntolerance, scalability, and performance optimization.\n<br>\n\nMy CV can be found <a href=\"http://web.cse.ohio-state.edu/%7Eyangwang/yangwang-cv.pdf\">here</a>.<br>\n\n<br>\n\n<span style=\"font-weight: bold;\">Research:</span>\n<ul>\n  <li><b>wPerf</b> [<a href=\"https://www.usenix.org/system/files/osdi18-zhou.pdf\">paper</a>, <a href=\"https://github.com/OSUSysLab/wPerf\">source code</a>]:\n\tthis work builds a tool to identify waiting events that are limiting the maximal throughput\n\tof a multi-threaded application. To achieve this goal, wPerf first computes how a waiting event\n\tcan affect threads directly waiting for this event; then wPerf builds a wait-for graph to compute whether\n\tsuch impact can indirectly reach other threads. By combining these two techniques, wPerf essentially\n\ttries to identify events with large impacts on all threads.</li>\n  <li><b>SafeTimer</b> [<a href=\"https://www.usenix.org/system/files/conference/atc18/atc18-ma-sixiang.pdf\">paper</a>, <a href=\"https://github.com/StarThinking/safetimer\">source code</a>]:\n       this work enhances existing timeout detection protocols to tolerate long delays\n       in the OS and the application. At the heartbeat receiver, SafeTimer checks whether there\n       are any pending heartbeats before reporting a failure; at the heartbeat sender, SafeTimer\n       blocks the sender if it cannot send out heartbeats in time. We have proved that SafeTimer\n       can prevent false failure report despite arbitrary delays in the OS and the application.\n       This property allows existing protocols to relax their timing  assumptions and use a shorter\n       timeout interval for faster failure detection.</li>\n<li><b>Hadoop metadata benchmark</b> [<a href=\"http://www.mscs.mu.edu/~mascots/Papers/69.pdf\">paper</a>, <a href=\"https://github.com/SayuRanger/HadoopMetadataBench\">source code</a>]:\n\tthis work builds benchmarks to test HDFS NameNode and Yarn Resource Manager by running real experiments in a small testbed,\n\tcollecting the traces, and extrapolating such traces to a larger scale.\n        </li>\n  <li><b>ThriftyPaxos</b> [<a href=\"https://www.usenix.org/system/files/conference/atc16/atc16_paper-shi.pdf\">paper</a>, <a href=\"https://github.com/vdr007/ThriftyPaxos\">source code</a>]:\n\tstandard Paxos needs 2f+1 replicas to tolerate f+1 failures. To reduce cost, ThriftyPaxos activates f+1\n\treplicas first and activates backup ones when active ones fail. To ensure system availability\n\twhen copying data to the newly activated replica, ThriftyPaxos logically separates agreement\n\tand execution and exploits a unique property from each: agreement only needs to decide what\n\tis the next request, which allows\n\ta blank agreement node to join the protocol instantly; execution requires only 1 node to reply\n\twhen processing a client's request, but requires f+1 nodes to reply when take a snapshot, which\n\tmeans when we have fewer than f+1 replicas, we can still process clients' requests and only need\n\tto delay the time-insensitive snapshot task. \n\t</li>\n</ul>\n\n<!--\n<br>\n<a href=\"20160819_systemsgroupoverview.pptx\">Orientation slides</a> <br>\n\n<br>\n\n<span style=\"font-weight: bold;\">Education:</span>\n<ul>\n\n  <li>Ph.D. in Computer Science, 2014. The University of Texas at\nAustin. Advisors: Dr. Lorenzo Alvisi and Dr. Mike Dahlin (now at\nGoogle).<br>\n  </li>\n  <li>Master of Engineering in Computer Science and Technology,\n2008. Tsinghua University. Advisor: Dr. Jiwu Shu.</li>\n  <li>Bachelor of Engineeing in Computer Science and Technology,\n2005. Tsinghua University.</li>\n</ul>\n\n<span style=\"font-weight: bold;\"></span><span style=\"font-weight: bold;\">Awards\nand Honors:</span><br>\n\n<ul>\n\n  <li>Google Ph.D. fellowship in Distributed Computing, 2013.</li>\n  <li>Best paper award. Systor 2014.</li>\n</ul>\n\n<span style=\"font-weight: bold;\">Teaching:</span><br>\n\n<ul>\n  <li> 2017 Fall: CSE6431 Advanced Operating System.\n  <li> 2017 Spring: CSE2431 System II (Operating System).\n  <li> 2016 Fall: CSE2431 System II (Operating System).\n  <li> 2016 Spring: <a href=\"cse5439.html\"> CSE 5439 Large-scale Data Processing</a>.\n  <li> 2015 Fall: CSE2431 System II (Operating System).\n</ul>\n-->\n\n<!--\n<span style=\"font-weight: bold;\">Current projects:</span><br>\n\n<ul>\n\n  <li>Processing Small Requests Efficiently on Modern Hardware (with Rong Shi)</li>\n</ul>\n-->\n\n<span style=\"font-weight: bold;\">Publications:</span>\n<ul>\n  <li> <b>[ASPLOS '20]</b> FlatStore: an Efficient Log-Structured Key-Value Storage Engine for Persistent Memory. <br>\n   Youmin Chen, Youyou Lu, Fan Yang, Qing Wang, Yang Wang, Jiwu Shu. <br>\n   Accepted by the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems.\n  </li><li> <b>[USENIX ATC '19]</b> <a href=\"https://www.usenix.org/system/files/atc19-wang_0.pdf\">Dayu: Fast and Low-interference Data Recovery in Very-large Storage Systems</a>. <br>\n   Zhufan Wang, Guangyan Zhang, Yang Wang, Qinglin Yang, and Jiaji Zhu. <br>\n   In 2019 USENIX Annual Technical Conference, Renton, WA, July 2019.\n\n  </li><li> <b>[USENIX ATC '19]</b> <a href=\"https://www.usenix.org/system/files/atc19-jin.pdf\">PostMan: Rapidly Mitigating Bursty Traffic by Offloading Packet Processing</a>. <br>\n   Panpan Jin, Jian Guo, Yikai Xiao, Rong Shi, Yipei Niu, Fangming Liu, Chen Qian, and Yang Wang. <br>\n   In 2019 USENIX Annual Technical Conference, Renton, WA, July 2019.\n  \n  </li><li> <b>[ICS '19]</b> <a href=\"https://dl.acm.org/citation.cfm?id=3330380\">Henosis: Workload-driven small array consolidation and placement for HDF5 applications on heterogeneous data stores</a>. <br>\n   Donghe Kang, Vadang Patel, Ashwati Nair, Spyros Blanas, Yang Wang, and Srinivasan Parthasarathy. <br>\n   In the 33rd ACM International Conference on Supercomputing, Phoenix, AZ, June 2019.\n\n  </li><li> [IEEE TC] <a href=\"https://ieeexplore.ieee.org/document/8489961/authors#authors\">Redio: Accelerating Disk-based Graph Processing by Reducing Disk I/Os</a>. <br>\n   Chengwen Wu, Guangyan Zhang, Yang Wang, Xinyang Jiang, and Weimin Zheng. <br>\n   IEEE Transactions on Computers, Vol 68, Issue 3, March 2019.\n\n  </li><li> <b>[OSDI '18]</b> <a href=\"https://www.usenix.org/system/files/osdi18-zhou.pdf\">wPerf: Generic Off-CPU Analysis to Identify Critical Waiting Events</a>. <br>\n   Fang Zhou, Yifan Gan, Sixiang Ma, and Yang Wang. <br>\n   In the 13th USENIX Symposium on Operating Systems Design and Implementation, Carlsbad, CA, Oct 2018.\n\n  </li><li> [MASCOTS 2018] <a href=\"http://www.mscs.mu.edu/~mascots/Papers/69.pdf\">Evaluating Scalability Bottlenecks by Workload Extrapolation</a>. <br>\n   Rong Shi, Yifan Gan, and Yang Wang. <br>\n   In the 26th IEEE International Symposium on the Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, Milwaukee, WI, Sep 2018.\n\n  </li><li> <b>[USENIX ATC '18]</b> <a href=\"https://www.usenix.org/system/files/conference/atc18/atc18-ma-sixiang.pdf\">Accurate Timeout Detection Despite Arbitrary Processing Delays</a>. <br>\n   Sixiang Ma, and Yang Wang. <br>\n   In 2018 USENIX Annual Technical Conference, Boston, MA, July 2018.\n\n  </li><li> <b>[USENIX ATC '16]</b> <a href=\"https://www.usenix.org/system/files/conference/atc16/atc16_paper-shi.pdf\">Cheap and Available State Machine Replication</a>. <br>\n   Rong Shi, and Yang Wang. <br>\n   In 2016 USENIX Annual Technical Conference, Denver, CO, June 2016.\n\n  </li><li> <b>[SOSP '15]</b> <a href=\"http://dl.acm.org/citation.cfm?id=2815430\">High-Performance ACID via Modular Concurrency Control</a>. <br>\n  Chao Xie, Chunzhi Su, Cody Littley, Lorenzo Alvisi, Manos Kapritsos, and Yang Wang. <br>\n  In the 25th ACM Symposium on Operating Systems Principles, Monterey, CA, Oct 2015.\n\n  <br> <br>-------- Prior to join OSU -------- <br>\n\n  </li><li> <b>[OSDI '14]</b> <a href=\"http://web.cse.ohio-state.edu/%7Eyangwang/osdi14-paper-xie.pdf\">Salt:Combining ACID and BASE in a Distributed Database</a>. <br>\n   Chao Xie, Chunzhi Su, Manos Kapritsos, Yang Wang, Navid Yaghmazadeh, Lorenzo Alvisi, and Prince Mahajan. <br>\n   In the 11th USENIX Symposium on Operating Systems Design and Implementation, Broomfield, CO, Oct 2014.\n  \n  </li><li> [Systor 2014] <a href=\"http://web.cse.ohio-state.edu/%7Eyangwang/lazy-recovery.pdf\">Lazy Means Smart: Reducing Repair Bandwidth Costs in Erasure-coded Distributed Storage</a>. <br>\n   <b> Best paper award. </b> <br>\n   Mark Silberstein, Lakshmi Ganesh, Yang Wang, Lorenzo Alvisi, and Mike Dahlin. <br>\n  In the 7th ACM International Systems and Storage Conference, Haifa, Israel, June 2014.\n\n  </li><li> <b>[NSDI '14]</b> <a href=\"http://web.cse.ohio-state.edu/%7Eyangwang/exalt-nsdi14.pdf\">Exalt: Empowering Researchers to Evaluate Large-Scale Storage Systems</a>. <br>\n  Yang Wang, Manos Kapritsos, Lara Schmidt, Lorenzo Alvisi, and Mike Dahlin. <br>\n  In the 11th USENIX Symposium on Networked System Design and Implementation, Seattle, WA, Apr 2014.\n\n  </li><li> <b>[NSDI '13]</b> <a href=\"http://web.cse.ohio-state.edu/%7Eyangwang/nsdi13-final236.pdf\">Robustness in the Salus scalable block store</a>. <br>\n   Yang Wang, Manos Kapritsos, Zuocheng Ren, Prince Mahajan, Jeevetha Kirubanandam, Lorenzo Alvisi, and Mike Dahlin. <br>\n  In the 10th USENIX Symposium on Networked System Design and Implementation, Lombard, Il, Apr 2013.\n\n  </li><li> <b>[OSDI '12]</b> <a href=\"http://web.cse.ohio-state.edu/%7Eyangwang/osdi12-final190.pdf\">All about Eve: Execute-Verify Replication for Multi-Core Servers</a>. <br>\n  Manos Kapritsos, Yang Wang, Vivien Quema, Allen Clement, Lorenzo Alvisi, and Mike Dahlin. <br>\n  In the 10th USENIX Symposium on Operating Systems Design and Implementation, Hollywood, CA, Oct 2012.\n\n  </li><li> <b>[USENIX ATC '12]</b> <a href=\"http://web.cse.ohio-state.edu/%7Eyangwang/Gnothi_Wang.pdf\">Gnothi:Separating Data and Metadata for Efficient and Available Storage Replication</a>. <br>\n  Yang Wang, Lorenzo Alvisi, and Mike Dahlin. <br>\n  In 2012 USENIX Annual Technical Conference, Boston, MA, June 2012.\n\n  </li><li> [ACM TOS] <a href=\"http://web.cse.ohio-state.edu/%7Eyangwang/SOPA-wang.pdf\">SOPA: Selecting the Optimal Policy Adaptively</a>. <br>\n  Yang Wang, Jiwu Shu, Guangyan Zhang, Wei Xue, and Weimin Zheng. <br>\n  ACM transactions on storage, Volume 6 Issue 2, July 2010.\n\n  </li><li> <b>[SOSP '09]</b> <a href=\"http://www.sigops.org/sosp/sosp09/papers/clement-sosp09.pdf\">UpRight Cluster Services</a>. <br>\n   Allen Clement, Manos Kapritsos, Sangmin Lee, Yang Wang, Lorenzo Alvisi, Mike Dahlin, and Taylor Riche. <br>\n   In 22nd ACM Symposium on Operating Systems Principles, Big Sky, MT, Oct 2009.\n</li></ul>\n\n<span style=\"font-weight: bold;\">Services:</span><br>\n<ul>\n  <li> 2020: OSDI\n  </li><li> 2019: USENIX ATC ERC, SOSP Student Grant Committee\n  </li><li> 2018: ICDCS\n  </li><li> 2017: SOSP Student Grant Committee\n  </li><li> 2016: SoCC, SysTOR, DCOSS\n</li></ul>\n\n<span style=\"font-weight: bold;\">Students:</span><br>\n<ul>\n  <li> Sixiang Ma (Ph.D.)</li>\n  <li> Yifan Gan (Ph.D.)</li>\n  <li> Fang Zhou (Ph.D.)</li>\n  <li> Rong Shi (Ph.D. 2018): Facebook</li>\n  <li> Zijian Hu (Master 2017): Facebook. </li>\n</ul>\n\n<span style=\"font-weight: bold;\"></span><span style=\"font-weight: bold;\">Resources:</span><br>\n\n<ul>\n\n<!--  <li>Learning materials for new students: <a href=\"./materials.html\">here</a></li>-->\n  <li>Cluster guidline: <a href=\"./cluster.html\">here</a><br>\n  </li>\n  <li>Public testbeds: <a href=\"https://www.cloudlab.us/\">CloudLab</a>, <a href=\"https://www.chameleoncloud.org/\">Chameleon</a></li>\n</ul>\n</font>\n\n</body></html>"