"<html><head>\n<title> Home Page of Charles N. Fischer </title>\n</head>\n\n<body bgcolor=\"fffacd\">\n<h1 align=\"center\">\n&nbsp;&nbsp;Charles N. Fischer\n</h1>\n<br>\n\n<!--------------------\n<applet  code=javex.class width=110 height=110 align=right>\n<param name=BGCOLOR value=\"000000\">\n<param name=FACECOLOR value=\"FFFFFF\">\n<param name=SWEEPCOLOR value=\"FF0000\">\n<param name=MINUTECOLOR value=\"000080\">\n<param name=HOURCOLOR value=\"000080\">\n<param name=TEXTCOLOR value=\"804010\">\n<param name=CASECOLOR value=\"000080\">\n<param name=TRIMCOLOR value=\"FF0000\">\n<param name=LOGOSTRING value=\"Comp Sci\">\n<param name=LOGOIMAGEURL value=\"w2.gif\">\n<param name=TIMEZONE value=\"+5\">\n</applet>\n------------------->\n<table> </table><table width=\"100%\">\n<tbody><tr><td>\n<img halign=\"center\" src=\"./cnf.2013.jpg\" width=\"180\"><br>\n&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;\nCharles N. Fischer\n</td>\n<td halign=\"center\">\n<img halign=\"left\" src=\"images2/ribbon100.gif\" width=\"50\"><br>\nIn remembrance<br>\nof those slain on<br>\n9/11/2001.<br>\n<em>Never forgive;<br> never forget.</em>\n</td>\n<td>\n<img halign=\"right\" src=\"images2/motionw.gif\" width=\"50\"><br>\n<em>On Wisconsin!</em><br>\n<br><br><br><br>\n\n\n</td><td>\n<h3>Professor Emeritus of<br>  <a href=\" http://www.cs.wisc.edu/\">Computer Science</a></h3>\n<b>Address:</b> 1210 West Dayton <br>\nMadison, WI&nbsp; 53706-1685<br>\n<b>Office:</b> 5393<br>\n<b>Phone:</b>  608.262.1204<br>\n\n<b>Email:</b> fischer 'at' cs.wisc.edu <br>\n<b>Office Hours:</b> Mondays, noon - 3PM<br>\n</td>\n\n</tr></tbody></table>\n\n<img src=\"cnf.images/rainline.gif\">\n<p>\n</p><h2> Teaching </h2>\n<p>\nThis fall I'm teaching\n<a href=\" http://www.cs.wisc.edu/~fischer/cs536.f18.html\">\nCS 536,</a>\n<!---------\nCS 536,\n-------------------->\nthe undergraduate course in compilers\nat Epic Systems.\n<!---------\nIn fall 2014 I taught\n<A HREF=\" http://www.cs.wisc.edu/~fischer/cs701.html\" >\nCS 701,</a>\nCS 536,\nthe graduate course in compilers.\n<p>\nThis spring I taught\n<A HREF=\" http://www.cs.wisc.edu/~fischer/cs536.s16.html\" >\nCS 536,</a>\n-------------------->\n<!---------\nCS 536,\nthe undergraduate course in compilers\nat Epic Systems.\n<!-------------\n<p>\nThis fall I'll be teaching at Epic Systems\n<A HREF=\" http://www.cs.wisc.edu/~fischer/cs367/index.html\" >\nCS 367,</a>\n-------------->\n<!---------\nCS 536,\nthe undergraduate data structures course.\n-------------------->\n</p><p>\n<img src=\"cnf.images/rainline.gif\">\n</p><p>\n</p><h2> New Book </h2>\n<p>\nThe long awaited revision of\n<i>Crafting a Compiler</i>\nis available.<br><br>\n<table> </table><table width=\"100%\">\n<tbody><tr><td>\n<img halign=\"center\" src=\"./images2/cac.jpg\" width=\"180\"><br>\n&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;\n</td>\n<td>\n<font size=\"5\">\n<i>Crafting A Compiler</i>\n</font><br><br>\nCharles N. Fischer, University of Wisconsin-Madison.<br>\nRon K. Cytron, Washington University<br>\nRichard J. LeBlanc, Jr., Seattle University<br>\nISBN-10: 0136067050<br>\nISBN-13:  9780136067054<br>\nPublisher:  Addison-Wesley<br>\nCopyright:  2010<br>\nFormat:  Cloth; 720 pp<br>\n</td>\n\n</tr></tbody></table>\n\n</p><p>\n<!--------------------\n<h2> Research </h2>\n<p>\nMy research interests focus on compiler design and implementation.\nRecently, I've been interested in how to best exploit the enormous new\ncapabilities provided by modern computer architectures.\nSome of the issues my students and I have investigated include:\n<p>\n<ul>\n<li>\nA number of emerging computer architectures are <em>multithreaded</em>,\nsupporting efficient simultaneous execution of several program threads.\nBut where are such threads to be found? Most programs are single-threaded,\nand extracting a useful number of independent threads is difficult.\n<p>\nWe propose creating <em>assist threads</em> that concurrently assist an\napplication program as it executes. Assist threads can perform many functions.\nThey can monitor a program's execution, looking for errors, inconsistencies,\nor hot-spots. They can anticipate a program's flow of control, prefetching instructions or data.\nThey can \"shadow\" a program's execution,\n<a href=\"http://www.cs.wisc.edu/~fischer/ismm2000.pdf\">\nperforming garbage collection</a>\nor optimizing code already executed.\n<p>\nCurrent research involves ways of automatically finding and generating assist\nthreads, as well as evaluating their effectiveness in enhancing program performance.\n<p>\n<li>\nModern architectures strive to exploit instruction level parallelism.\nWhenever possible, independent instructions are executed in parallel.\nDead values, which are no longer needed, can clog registers and\nlimit performance. With compiler assistance,\n<a href=\"http://www.cs.wisc.edu/~fischer/dead-values.ps\">\ndead registers </a>\ncan be recognized\nand freed as a program executes.\n<p>\n<li>\nAnyone who codes in C or C++ knows how easy it is to make mistakes.\nErrors involving pointers and array indices are especially common.\nWe have studied ways to\n<a href=\"http://www.cs.wisc.edu/~fischer/cs701/final.patil.spe.ps\">\nautomatically check <em>all</em> pointer and array operations </a>\nat run-time on shared-memory multiprocessor workstations.\nUsing one processor to run a program and another to monitor the program,\nit is possible to routinely check programs as they execute, with little or\nno apparent slowdown.\n<p>\n<li>\nCareful register allocation is vital in generating code -- unnecessary loads\nand stores must be avoided.\nThe ultimate in register allocation is\n<em> interprocedural register allocation</em> in which <em>all</em> the\nprocedures of a program are analyzed.\nWe have studied\n<a href=\"http://www.cs.wisc.edu/~fischer/cs701/kurlander.ps\">\ninterprocedural allocation models</a>\nthat <em>optimally</em>\nallocate register among procedures in <em>polynomial</em> time.\nWhat's more, the approach seems to be effective in practice.\n<p>\n<li>\nThe dominant model for global (procedure-level) register allocation is graph coloring.\nIs this the best model?\nMaybe not.\n<a href=\"http://www.cs.wisc.edu/~fischer/cs701/prob.reg.ps\">\nOther models </a>\nthat explicitly quantify the likelihood and benefit of register\nresidence are very attractive.\n<p>\n<li>\nCode scheduling is important to avoid unnecessary pipeline delays. We have\ninvestigated  issues in\n<a href=\"http://www.cs.wisc.edu/~fischer/cs701/inst.sched.ps\"> \n<em>optimally</em> scheduling arithmetic expressions.</a>\n</ul>\n<p>\nThis research has been generously funded by the National Sciences Foundation under the following awards:\nCCR-8908355, CCR-9505922, CCR-9974613 and CCR-0208677.\n<img src=\"cnf.images/rainline.gif\">\n<P>\n\n<H2> Recent Publications </H2>\n<ul>\n<li>\n<a href=\"http://www.cs.wisc.edu/~fischer/mccurdy-ppop.pdf\">\n\"User-Controllable Coherence for High Performance Shared Memory Multiprocessors,\" </a>\nCollin McCurdy and Charles N. Fischer,\n<em>\nACM SIGPLAN Symposium on Principles and Practice of Parallel Programming\n</em>\nJune, 2003.\n<p>\n<li>\n<a href=\"http://www.cs.wisc.edu/~fischer/ismm2000.pdf\">\n\"Concurrent Garbage Collection Using Program Slices on Multithreaded Processors,\" </a>\nManoj Plakal and Charles N. Fischer,\n<em>\nThe 2000 International Symposium on Memory Management</em>\nOctober, 2000.\n<p>\n<li>\n<a href=\"http://www.cs.wisc.edu/~fischer/dead-values.ps\">\n\"Exploiting Dead Value Information,\" </a>\nMilo Martin, Amir Roth and Charles N. Fischer,\n<em>\nMicro-30, International Symposium on Microarchitecture,</em>\nDecember, 1997.\n<p>\n<li>\n<a href=\"http://www.cs.wisc.edu/~fischer/cs701/kurlander.ps\">\n\"Minimum Cost Interprocedural Register Allocation,\" </a>\nSteven M. Kurlander and Charles N. Fischer,\n<em>\nPOPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming\nLanguages,</em>\nJanuary, 1996.\n<p>\n<li>\n<a href=\"http://www.cs.wisc.edu/~fischer/cs701/final.patil.spe.ps\">\n\"Low-cost, Concurrent Checking of Pointer and Array Accesses in C Programs,\"</a>\nHarish Patil and Charles N. Fischer,\n<em>\nSoftware--Practice and Experience,</em>\nVol 27, No. 27, pp. 87-110 (1997).\n<p>\n<li>\n<a href=\"http://www.cs.wisc.edu/~fischer/cs701/prob.reg.ps\"> \n\"Demand-Driven Register Allocation,\"</a>\nTodd A. Proebsting and Charles N. Fischer,\n<em>\nACM Transactions on Programming Languages and Systems, </em>\nVol 18, No. 6, 683-710 (1996).\n<p>\n<li>\n<a href=\"http://www.cs.wisc.edu/~fischer/cs701/inst.sched.ps\"> \n\"Efficient Instruction Scheduling for Delayed-Load Architectures,\"</a>\nSteven M. Kurlander, Todd A. Proebsting and Charles N. Fischer,\n<em>\nACM Transactions on Programming Languages and Systems,</em>\nVol 17, No. 5, 740-776, (1995).\n<p>\n<li>\n<a href=\"http://www.cs.wisc.edu/~fischer/zero-cost.ps\">\n\"Zero-cost Range Splitting,\"</a>\nSteven M. Kurlander and Charles N. Fischer,\n<em>\nSIGPLAN '94 Conference on Programming Language Design and Implementation,</em>\nJune, 1994.\n</ul>\n<img src=\"cnf.images/rainline.gif\">\n<P>\n<h2>Other Activities</h2>\n<ul>\n<li>\nA new, completely revised second edition of\n<a href=\"http://siesta.cs.wustl.edu/~cytron/cac/\"> \n\"Crafting a Compiler,\"</a>\nco-authored with\n<a href=\"http://siesta.cs.wustl.edu/~cytron/\"> \nRon Cytron</a>\nand\n<a href=\"http://www.cc.gatech.edu/computing/SW_Eng/people/Faculty/Richard.LeBlanc.html\"> \nRichard J. LeBlanc, Jr.</a>\nis under development.\nIt will be published by\n<a href=\"http://www.awl.com/cseng\"> \nAddison Wesley Longman.</a>\nLook for it soon at better bookstores everywhere.\n<p>\n<li>\nI was a member of the Selection Committee for\n<LI> <A HREF=\"http://www.cs.utexas.edu/users/mckinley/20-years.html\"> \n        20 Years of PLDI</A>\n<p>\n<li>\nIn 1996 I served as General Chair of the\n<a href=\"pldi96/index.html\"> \nACM Programming Language Design and Implementation Conference (PLDI)</a>\n</ul>\n<img src=\"cnf.images/rainline.gif\">\n-------------->\n</p><p>\n</p><h2>Ph.D Students</h2>\n<ol>\n<li>\nDonn R. Milton,\n\"Syntactic Specification and Analysis with Attributed Grammars,\"\nJuly 1977.\n<p>\n</p></li><li>\nBruce R. Rowland,\n\"Semantic Attribute Evaluation During Syntactic Analysis,\"\nJuly 1977.\n<p>\n</p></li><li>\nStephen K. Skedzielewski,\n\"Definition and Use of Attribute Reevaluation in Attributed Grammars,\"\nSeptember 1978.\n<p>\n</p></li><li>\nBernard A. Dion,\n\"Locally Least-Cost Error Correctors for Context-Free and Context-Sensitive\nParsers,\"\nDecember 1978.\n<p>\n</p></li><li>\n<a href=\"http://www.linkedin.com/in/mahadevanganapathi\"> \nMahadevan Ganapathi,</a>\n\"Retargetable Code Generation and Optimization Using Attribute Grammars,\"\nNovember 1980.\n<p>\n</p></li><li>\nVimal Begwami,\n\"A New Approach for Attribute Evaluation and Error Correction in Compilers,\"\nAugust 1982.\n<p>\n</p></li><li>\nJon Mauney,\n\"Least-cost Syntactic Error Correction Using Extended Right Context,\"\nJanuary 1983.\n<p>\n</p></li><li>\nGregory F. Johnson,\n\"Context Sensitive Attribute Flow,\"\nAugust 1983.\n<p>\n</p></li><li>\nAnil Pal,\n\"Generating Execution Facilities for Integrated Programming Environments,\"\nDecember 1986.\n<p>\n</p></li><li>\n<a href=\"http://memorial.cs.utsa.edu/will.php\"> \nWilliam H. Winsborough, </a>\n\"Automatic, Transparent Parallelization of Logic Programs at Compile Time,\"\nAugust 1988.\n<p>\n</p></li><li>\n<a href=\"http://www.linkedin.com/in/gudavenkatesh\"> \nG A Venkatesh, </a>\n\"A Framework for Specification and Implementation of Program Analysis Algorithms,\"\nAugust 1989.\n<p>\n</p></li><li>\n<a href=\"http://proebsting.cs.arizona.edu/\"> \nTodd A. Proebsting, </a>\n\"Code Generation Techniques,\"\nAugust 1992.\n<p>\n</p><p>\n</p></li><li>\nSteve Kurlander,\n\"Approaches to Interprocedural Register Allocation,\"\nJanuary 1996.\n<p>\n</p><p>\n</p></li><li>\n<a href=\"http://pages.cs.wisc.edu/~patil/\"> \nHarish Patil, </a>\n\"Efficient Program Monitoring Techniques,\"\nJune 1996.\n\n<p>\n</p><p>\n</p></li><li>\n<a href=\"http://ft.ornl.gov/~cmccurdy/\"> \nCollin B. McCurdy, </a>\n<a href=\"http://ft.ornl.gov/~cmccurdy/papers/thesis.pdf\"> \n\"A Dual Address Space Architecture: Implementation and Evaluation,\" </a>\nMay 2008.\n\n<p>\n</p><p>\n</p></li><li>\n<a href=\"http://www.linkedin.com/in/willbenton\"> \nWilliam Benton,</a>\n\"Object-level Parallelism for Chip Multiprocessors,\"\nDecember 2008.\n<p>\n</p><p>\n</p></li><li>\n<a href=\"http://www.cs.uml.edu/~mulhern/\"> \nAnne Mulhern, </a>\n\"Polytypic Proving,\"\nApril 2010.\n</li></ol>\n\n<img src=\"cnf.images/rainline.gif\">\n<p>\n</p><h2>Education</h2>\nPh.D.,\n<a href=\"http://www.cs.cornell.edu/\"> \nCornell University,</a>\n1974\n<br>\n\"On Parsing Context-Free Languages in Parallel Environments,\"\n<br>\nsupervised by John H. Williams.<br>\n<img src=\"cnf.images/rainline.gif\">\n<p>\n\n<table> </table><table width=\"100%\">\n<tbody><tr><td>\n<img halign=\"center\" src=\"./images2/bucky1.jpg\" width=\"300\"><br>\nIn conference with Bucky.\n</td>\n<td>\n\n<img halign=\"center\" src=\"./images2/seth.jpg\" width=\"280\"><br>\nPlanning tomorrow's lecture with Seth.\n</td>\n\n</tr></tbody></table>\n\n\n\n</p></body></html>"